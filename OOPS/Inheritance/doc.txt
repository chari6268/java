What is inheritance in Java?
    Inheritance allows one class to inherit the properties and behaviors of another class, promoting code reuse and establishing hierarchical relationships.

Can a class inherit from multiple classes in Java?
    No, Java does not support multiple inheritance with classes. However, multiple inheritance can be achieved through interfaces.

What is the super keyword in Java?
    The super keyword is used to refer to the immediate parent class. It can be used to call the parent classâ€™s constructor, methods, and variables.

What is the difference between method overloading and method overriding?
    Overloading: Occurs when methods with the same name have different signatures (parameter types or number).
    Overriding: Occurs when a subclass provides a specific implementation for a method defined in the superclass.

Can constructors be inherited in Java?
    Constructors are not inherited, but the subclass(Child Class) can call the constructor of the superclass(parent Class) using super().

What happens if a subclass does not call super()?
    If a subclass does not explicitly call super(), Java automatically calls the no-argument constructor of the superclass.

What is interfaces?
    Interfaces can have abstract methods that must be implemented by the class that implements them.

Can a subclass override a private method of the superclass?
    No, private methods are not inherited, so they cannot be overridden.

Explain the concept of upcasting and downcasting in inheritance.
    Upcasting: 
        Assigning a subclass object to a superclass reference, allowing polymorphism. 
        For example:
            Animal a = new Dog();
    Downcasting: 
        Casting a superclass reference back to a subclass reference, typically used when the reference points to a subclass instance.

